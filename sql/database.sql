-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.activity_sectors (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT activity_sectors_pkey PRIMARY KEY (id)
);
CREATE TABLE public.checklist_executions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  checklist_id uuid NOT NULL,
  checklist_item_id uuid NOT NULL,
  is_completed boolean NOT NULL DEFAULT false,
  comments text,
  execution_date timestamp with time zone NOT NULL,
  employee_id uuid NOT NULL,
  user_id uuid,
  organization_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT checklist_executions_pkey PRIMARY KEY (id),
  CONSTRAINT checklist_executions_checklist_id_fkey FOREIGN KEY (checklist_id) REFERENCES public.checklists(id),
  CONSTRAINT checklist_executions_checklist_item_id_fkey FOREIGN KEY (checklist_item_id) REFERENCES public.checklist_items(id),
  CONSTRAINT checklist_executions_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT checklist_executions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT checklist_executions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.checklist_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  checklist_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  order_index integer NOT NULL DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT checklist_items_pkey PRIMARY KEY (id),
  CONSTRAINT checklist_items_checklist_id_fkey FOREIGN KEY (checklist_id) REFERENCES public.checklists(id),
  CONSTRAINT checklist_items_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT checklist_items_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.checklists (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  category text NOT NULL,
  frequency text NOT NULL DEFAULT 'daily'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT checklists_pkey PRIMARY KEY (id),
  CONSTRAINT checklists_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT checklists_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT checklists_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cleaning_equipment (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  type text,
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT cleaning_equipment_pkey PRIMARY KEY (id),
  CONSTRAINT cleaning_equipment_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT cleaning_equipment_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cleaning_equipment_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cleaning_methods (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  description text NOT NULL,
  steps ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT cleaning_methods_pkey PRIMARY KEY (id),
  CONSTRAINT cleaning_methods_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT cleaning_methods_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cleaning_methods_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cleaning_products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  brand text,
  type text,
  usage_instructions text,
  safety_instructions text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT cleaning_products_pkey PRIMARY KEY (id),
  CONSTRAINT cleaning_products_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT cleaning_products_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cleaning_products_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cleaning_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  cleaning_task_id uuid,
  user_id uuid,
  scheduled_date date NOT NULL,
  completion_date timestamp with time zone,
  is_completed boolean DEFAULT false,
  is_compliant boolean,
  comments text,
  photo_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  CONSTRAINT cleaning_records_pkey PRIMARY KEY (id),
  CONSTRAINT cleaning_records_cleaning_task_id_fkey FOREIGN KEY (cleaning_task_id) REFERENCES public.cleaning_tasks(id),
  CONSTRAINT cleaning_records_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT cleaning_records_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.cleaning_sub_zones (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  cleaning_zone_id uuid,
  name text NOT NULL,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT cleaning_sub_zones_pkey PRIMARY KEY (id),
  CONSTRAINT cleaning_sub_zones_cleaning_zone_id_fkey FOREIGN KEY (cleaning_zone_id) REFERENCES public.cleaning_zones(id),
  CONSTRAINT cleaning_sub_zones_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cleaning_sub_zones_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cleaning_tasks (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  cleaning_zone_id uuid,
  cleaning_sub_zone_id uuid,
  name text NOT NULL,
  frequency text NOT NULL,
  frequency_days integer,
  action_to_perform text NOT NULL,
  cleaning_product_id uuid,
  cleaning_equipment_id uuid,
  cleaning_method_id uuid,
  responsible_role text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT cleaning_tasks_pkey PRIMARY KEY (id),
  CONSTRAINT cleaning_tasks_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT cleaning_tasks_cleaning_zone_id_fkey FOREIGN KEY (cleaning_zone_id) REFERENCES public.cleaning_zones(id),
  CONSTRAINT cleaning_tasks_cleaning_sub_zone_id_fkey FOREIGN KEY (cleaning_sub_zone_id) REFERENCES public.cleaning_sub_zones(id),
  CONSTRAINT cleaning_tasks_cleaning_product_id_fkey FOREIGN KEY (cleaning_product_id) REFERENCES public.cleaning_products(id),
  CONSTRAINT cleaning_tasks_cleaning_equipment_id_fkey FOREIGN KEY (cleaning_equipment_id) REFERENCES public.cleaning_equipment(id),
  CONSTRAINT cleaning_tasks_cleaning_method_id_fkey FOREIGN KEY (cleaning_method_id) REFERENCES public.cleaning_methods(id),
  CONSTRAINT cleaning_tasks_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cleaning_tasks_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cleaning_zones (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT cleaning_zones_pkey PRIMARY KEY (id),
  CONSTRAINT cleaning_zones_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT cleaning_zones_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cleaning_zones_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.client_order_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_order_id uuid,
  preparation_id uuid,
  product_name character varying NOT NULL,
  description text,
  quantity numeric NOT NULL,
  unit character varying NOT NULL,
  unit_price numeric NOT NULL,
  total_price numeric NOT NULL,
  allergens ARRAY,
  lot_number character varying,
  dlc date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT client_order_items_pkey PRIMARY KEY (id),
  CONSTRAINT client_order_items_client_order_id_fkey FOREIGN KEY (client_order_id) REFERENCES public.client_orders(id),
  CONSTRAINT client_order_items_preparation_id_fkey FOREIGN KEY (preparation_id) REFERENCES public.preparations(id)
);
CREATE TABLE public.client_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  order_number character varying NOT NULL,
  client_id uuid,
  order_date date NOT NULL DEFAULT CURRENT_DATE,
  delivery_date date,
  delivery_address text,
  status character varying NOT NULL DEFAULT 'draft'::character varying CHECK (status::text = ANY (ARRAY['draft'::character varying, 'confirmed'::character varying, 'in_preparation'::character varying, 'ready'::character varying, 'delivered'::character varying, 'cancelled'::character varying]::text[])),
  total_amount numeric,
  notes text,
  employee_id uuid,
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT client_orders_pkey PRIMARY KEY (id),
  CONSTRAINT client_orders_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT client_orders_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT client_orders_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT client_orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE IF NOT EXISTS public.clients (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  name character varying NOT NULL,
  contact_person character varying,
  email character varying,
  phone character varying,
  address text,
  siret character varying,
  vat_number character varying,
  payment_terms integer DEFAULT 30,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT clients_pkey PRIMARY KEY (id),
  CONSTRAINT clients_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.cold_storage_temperature_readings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  cold_storage_unit_id uuid,
  user_id uuid,
  reading_date timestamp with time zone NOT NULL,
  temperature numeric NOT NULL,
  is_compliant boolean NOT NULL,
  comments text,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  CONSTRAINT cold_storage_temperature_readings_pkey PRIMARY KEY (id),
  CONSTRAINT cold_storage_temperature_readings_cold_storage_unit_id_fkey FOREIGN KEY (cold_storage_unit_id) REFERENCES public.cold_storage_units(id),
  CONSTRAINT cold_storage_temperature_readings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT cold_storage_readings_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.cold_storage_units (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  type text NOT NULL,
  location text NOT NULL,
  min_temperature numeric NOT NULL,
  max_temperature numeric NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT cold_storage_units_pkey PRIMARY KEY (id),
  CONSTRAINT cold_storage_units_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT cold_storage_units_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cold_storage_units_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cooling_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  user_id uuid,
  start_date timestamp with time zone NOT NULL,
  product_type text NOT NULL,
  product_name text NOT NULL,
  start_core_temperature numeric NOT NULL,
  end_date timestamp with time zone,
  end_core_temperature numeric,
  is_compliant boolean,
  comments text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  food_product_id uuid,
  operation_type character varying NOT NULL DEFAULT 'cooling'::character varying CHECK (operation_type::text = ANY (ARRAY['cold_preparation'::character varying, 'cooling'::character varying, 'hot_preparation'::character varying, 'hot_serving'::character varying, 'reheating'::character varying]::text[])),
  CONSTRAINT cooling_records_pkey PRIMARY KEY (id),
  CONSTRAINT cooling_records_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT cooling_records_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT cooling_records_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT cooling_records_food_product_id_fkey FOREIGN KEY (food_product_id) REFERENCES public.food_products(id)
);
CREATE TABLE public.corrective_actions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  name text NOT NULL,
  description text,
  category text CHECK (category = ANY (ARRAY['immediate'::text, 'preventive'::text, 'maintenance'::text, 'training'::text])),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT corrective_actions_pkey PRIMARY KEY (id),
  CONSTRAINT corrective_actions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.deliveries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  supplier_id uuid,
  user_id uuid,
  delivery_date timestamp with time zone NOT NULL,
  delivery_number text,
  photo_url text,
  comments text,
  is_compliant boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  CONSTRAINT deliveries_pkey PRIMARY KEY (id),
  CONSTRAINT deliveries_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT deliveries_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT deliveries_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT deliveries_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.delivery_note_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  delivery_note_id uuid,
  purchase_order_item_id uuid,
  product_name character varying NOT NULL,
  lot_number character varying,
  dlc date,
  quantity_ordered numeric,
  quantity_delivered numeric NOT NULL,
  unit character varying NOT NULL,
  temperature_at_delivery numeric,
  quality_check boolean DEFAULT true,
  quality_notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_note_items_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_note_items_delivery_note_id_fkey FOREIGN KEY (delivery_note_id) REFERENCES public.delivery_notes(id),
  CONSTRAINT delivery_note_items_purchase_order_item_id_fkey FOREIGN KEY (purchase_order_item_id) REFERENCES public.purchase_order_items(id)
);
CREATE TABLE public.delivery_notes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  delivery_number character varying NOT NULL,
  purchase_order_id uuid,
  supplier_id uuid,
  delivery_date date NOT NULL DEFAULT CURRENT_DATE,
  received_by character varying,
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'partial'::character varying, 'complete'::character varying, 'rejected'::character varying]::text[])),
  notes text,
  employee_id uuid,
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_notes_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_notes_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT delivery_notes_purchase_order_id_fkey FOREIGN KEY (purchase_order_id) REFERENCES public.purchase_orders(id),
  CONSTRAINT delivery_notes_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT delivery_notes_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT delivery_notes_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.employees (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  first_name text NOT NULL,
  last_name text NOT NULL,
  role text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_id uuid,
  password text NOT NULL DEFAULT ''::text,
  CONSTRAINT employees_pkey PRIMARY KEY (id),
  CONSTRAINT employees_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT employees_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.equipments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  name text NOT NULL,
  equipment_type text NOT NULL DEFAULT 'other'::text CHECK (equipment_type = ANY (ARRAY['fryer'::text, 'cooking'::text, 'other'::text])),
  equipment_state boolean DEFAULT true,
  oil_capacity numeric,
  oil_type text,
  temperature_monitoring boolean DEFAULT true,
  min_temperature numeric DEFAULT 0.0,
  max_temperature numeric DEFAULT 180.0,
  polarity_monitoring boolean DEFAULT true,
  min_polarity numeric DEFAULT 0.0,
  max_polarity numeric DEFAULT 25.0,
  location text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT equipments_pkey PRIMARY KEY (id),
  CONSTRAINT equipments_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT equipments_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.food_products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  category text NOT NULL,
  sub_category text,
  food_type text NOT NULL,
  storage_condition text NOT NULL,
  min_storage_temperature numeric,
  max_storage_temperature numeric,
  target_cooling_rate numeric,
  haccp_cooling_standard text,
  shelf_life_days integer,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT food_products_pkey PRIMARY KEY (id),
  CONSTRAINT food_products_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT food_products_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT food_products_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.invoice_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_id uuid,
  client_order_item_id uuid,
  product_name character varying NOT NULL,
  description text,
  quantity numeric NOT NULL,
  unit character varying NOT NULL,
  unit_price numeric NOT NULL,
  total_price numeric NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT invoice_items_pkey PRIMARY KEY (id),
  CONSTRAINT invoice_items_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT invoice_items_client_order_item_id_fkey FOREIGN KEY (client_order_item_id) REFERENCES public.client_order_items(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  invoice_number character varying NOT NULL,
  client_order_id uuid,
  client_id uuid,
  invoice_date date NOT NULL DEFAULT CURRENT_DATE,
  due_date date NOT NULL,
  subtotal numeric NOT NULL DEFAULT 0,
  tax_rate numeric NOT NULL DEFAULT 20.00,
  tax_amount numeric NOT NULL DEFAULT 0,
  total_amount numeric NOT NULL DEFAULT 0,
  status character varying NOT NULL DEFAULT 'draft'::character varying CHECK (status::text = ANY (ARRAY['draft'::character varying, 'sent'::character varying, 'paid'::character varying, 'overdue'::character varying, 'cancelled'::character varying]::text[])),
  payment_date date,
  notes text,
  employee_id uuid,
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT invoices_client_order_id_fkey FOREIGN KEY (client_order_id) REFERENCES public.client_orders(id),
  CONSTRAINT invoices_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT invoices_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT invoices_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.label_printings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  user_id uuid,
  product_label_type_id uuid,
  label_count integer NOT NULL,
  print_date timestamp with time zone DEFAULT now(),
  expiry_date date NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  printer_id uuid,
  CONSTRAINT label_printings_pkey PRIMARY KEY (id),
  CONSTRAINT label_printings_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT label_printings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT label_printings_product_label_type_id_fkey FOREIGN KEY (product_label_type_id) REFERENCES public.product_label_types(id),
  CONSTRAINT label_printings_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT label_printings_printer_id_fkey FOREIGN KEY (printer_id) REFERENCES public.printers(id)
);
CREATE TABLE public.label_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  user_id uuid,
  photo_url text NOT NULL,
  record_date timestamp with time zone NOT NULL,
  product_name text,
  batch_number text,
  supplier_name text,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  CONSTRAINT label_records_pkey PRIMARY KEY (id),
  CONSTRAINT label_records_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT label_records_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT label_records_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.non_conformities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_id uuid,
  product_reception_control_id uuid,
  non_conformity_type text NOT NULL,
  product_name text NOT NULL,
  quantity numeric,
  quantity_type text,
  photo_url text,
  description text,
  other_cause text,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT non_conformities_pkey PRIMARY KEY (id),
  CONSTRAINT non_conformities_delivery_id_fkey FOREIGN KEY (delivery_id) REFERENCES public.deliveries(id),
  CONSTRAINT non_conformities_product_reception_control_id_fkey FOREIGN KEY (product_reception_control_id) REFERENCES public.product_reception_controls(id),
  CONSTRAINT non_conformities_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT non_conformities_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.oil_control_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  oil_control_id uuid,
  equipment_id uuid,
  action_type text NOT NULL CHECK (action_type = ANY (ARRAY['create'::text, 'update'::text, 'validate'::text, 'delete'::text])),
  old_values jsonb,
  new_values jsonb,
  performed_by uuid,
  performed_at timestamp with time zone DEFAULT now(),
  reason text,
  CONSTRAINT oil_control_history_pkey PRIMARY KEY (id),
  CONSTRAINT oil_control_history_oil_control_id_fkey FOREIGN KEY (oil_control_id) REFERENCES public.oil_controls(id),
  CONSTRAINT oil_control_history_equipment_id_fkey FOREIGN KEY (equipment_id) REFERENCES public.equipments(id),
  CONSTRAINT oil_control_history_performed_by_fkey FOREIGN KEY (performed_by) REFERENCES public.users(id)
);
CREATE TABLE public.oil_controls (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  reading_date date NOT NULL DEFAULT CURRENT_DATE,
  reading_time time without time zone NOT NULL DEFAULT CURRENT_TIME,
  created_by uuid,
  status text DEFAULT 'in_progress'::text CHECK (status = ANY (ARRAY['in_progress'::text, 'completed'::text, 'cancelled'::text])),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT oil_controls_pkey PRIMARY KEY (id),
  CONSTRAINT oil_controls_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT oil_controls_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.oil_equipment_readings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  oil_control_id uuid,
  equipment_id uuid,
  control_type text NOT NULL CHECK (control_type = ANY (ARRAY['change_cleaning'::text, 'collection'::text, 'filtration'::text, 'strip'::text, 'visual'::text])),
  temperature numeric,
  polarity numeric,
  oil_level numeric,
  corrective_actions ARRAY DEFAULT ARRAY[]::uuid[],
  photo_url text,
  comments text,
  is_compliant boolean,
  critical_control_point boolean DEFAULT false,
  validated_by uuid,
  validated_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT oil_equipment_readings_pkey PRIMARY KEY (id),
  CONSTRAINT oil_equipment_readings_oil_control_id_fkey FOREIGN KEY (oil_control_id) REFERENCES public.oil_controls(id),
  CONSTRAINT oil_equipment_readings_equipment_id_fkey FOREIGN KEY (equipment_id) REFERENCES public.equipments(id),
  CONSTRAINT oil_equipment_readings_validated_by_fkey FOREIGN KEY (validated_by) REFERENCES public.users(id)
);
CREATE TABLE public.oil_quality_controls (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  user_id uuid,
  control_date timestamp with time zone NOT NULL,
  oil_type text NOT NULL,
  equipment_name text,
  control_type text NOT NULL,
  polar_compounds_percentage numeric,
  result text NOT NULL,
  action_taken text,
  next_control_date date,
  comments text,
  photo_url text,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  CONSTRAINT oil_quality_controls_pkey PRIMARY KEY (id),
  CONSTRAINT oil_quality_controls_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT oil_quality_controls_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT oil_quality_controls_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.oil_reading_corrective_actions (
  reading_id uuid NOT NULL,
  action_id uuid NOT NULL,
  CONSTRAINT oil_reading_corrective_actions_pkey PRIMARY KEY (reading_id, action_id),
  CONSTRAINT oil_reading_corrective_actions_reading_id_fkey FOREIGN KEY (reading_id) REFERENCES public.oil_equipment_readings(id),
  CONSTRAINT oil_reading_corrective_actions_action_id_fkey FOREIGN KEY (action_id) REFERENCES public.corrective_actions(id)
);
CREATE TABLE public.opening_hours (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  day_of_week integer NOT NULL CHECK (day_of_week >= 0 AND day_of_week <= 6),
  open_time time without time zone,
  close_time time without time zone,
  is_closed boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT opening_hours_pkey PRIMARY KEY (id),
  CONSTRAINT opening_hours_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT opening_hours_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT opening_hours_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.opening_hours_slots (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  opening_hours_id uuid NOT NULL,
  open_time time without time zone NOT NULL,
  close_time time without time zone NOT NULL,
  slot_order integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT opening_hours_slots_pkey PRIMARY KEY (id),
  CONSTRAINT opening_hours_slots_opening_hours_id_fkey FOREIGN KEY (opening_hours_id) REFERENCES public.opening_hours(id)
);
CREATE TABLE public.organizations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  address text,
  city text,
  zip_code text,
  country text,
  phone text,
  email text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_id uuid,
  activity_sector_id uuid,
  CONSTRAINT organizations_pkey PRIMARY KEY (id),
  CONSTRAINT organizations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT organizations_activity_sector_id_fkey FOREIGN KEY (activity_sector_id) REFERENCES public.activity_sectors(id)
);
CREATE TABLE public.preparations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  designation text NOT NULL,
  lot_number text,
  dlc date,
  allergens jsonb DEFAULT '[]'::jsonb,
  selling_price numeric NOT NULL,
  price_unit text NOT NULL DEFAULT 'piece'::text CHECK (price_unit = ANY (ARRAY['kg'::text, 'litre'::text, 'piece'::text, 'lot'::text, 'filet'::text, 'barquette'::text, 'portion'::text])),
  state text NOT NULL DEFAULT 'fresh'::text CHECK (state = ANY (ARRAY['fresh'::text, 'frozen'::text, 'vacuum_packed'::text, 'vacuum_frozen'::text, 'defrosted'::text, 'cooked'::text, 'precooked'::text])),
  category text NOT NULL CHECK (category = ANY (ARRAY['meat'::text, 'poultry'::text, 'game'::text, 'fish'::text, 'seafood'::text, 'charcuterie'::text, 'vegetable'::text, 'fruit'::text, 'dairy'::text, 'pastry'::text, 'sauce'::text, 'other'::text])),
  quantity numeric NOT NULL,
  quantity_unit text NOT NULL DEFAULT 'kg'::text CHECK (quantity_unit = ANY (ARRAY['kg'::text, 'g'::text, 'litre'::text, 'ml'::text, 'piece'::text, 'unit'::text])),
  save_to_preparations boolean NOT NULL DEFAULT false,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT preparations_pkey PRIMARY KEY (id),
  CONSTRAINT preparations_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT preparations_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT preparations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.printers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  user_id uuid,
  employee_id uuid,
  name text NOT NULL,
  model text NOT NULL,
  connection_type text NOT NULL,
  address text,
  label_size text,
  print_format jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT printers_pkey PRIMARY KEY (id),
  CONSTRAINT printers_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT printers_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT printers_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.product_label_types (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  category text NOT NULL,
  sub_category text NOT NULL,
  shelf_life_days integer NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT product_label_types_pkey PRIMARY KEY (id),
  CONSTRAINT product_label_types_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT product_label_types_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT product_label_types_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.product_reception_controls (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_id uuid,
  product_id uuid,
  storage_type text NOT NULL DEFAULT 'ambiant'::text,
  product_name text NOT NULL,
  temperature numeric,
  best_before_date date,
  use_by_date date,
  control_date timestamp with time zone NOT NULL,
  is_compliant boolean NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT product_reception_controls_pkey PRIMARY KEY (id),
  CONSTRAINT product_reception_controls_delivery_id_fkey FOREIGN KEY (delivery_id) REFERENCES public.deliveries(id),
  CONSTRAINT product_reception_controls_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT product_reception_controls_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT product_reception_controls_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.product_types (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  description text,
  cooling_requirements jsonb,
  haccp_guidelines text,
  organization_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_types_pkey PRIMARY KEY (id),
  CONSTRAINT product_types_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  description text,
  category text NOT NULL,
  sub_category text,
  unit_of_measure text,
  storage_type text NOT NULL DEFAULT 'ambiant'::text,
  shelf_life_days integer,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT products_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT products_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.purchase_order_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  purchase_order_id uuid,
  product_name character varying NOT NULL,
  description text,
  quantity numeric NOT NULL,
  unit character varying NOT NULL,
  unit_price numeric,
  total_price numeric,
  allergens ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchase_order_items_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_order_items_purchase_order_id_fkey FOREIGN KEY (purchase_order_id) REFERENCES public.purchase_orders(id)
);
CREATE TABLE public.purchase_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid,
  order_number character varying NOT NULL,
  supplier_id uuid,
  order_date date NOT NULL DEFAULT CURRENT_DATE,
  expected_delivery_date date,
  status character varying NOT NULL DEFAULT 'draft'::character varying CHECK (status::text = ANY (ARRAY['draft'::character varying, 'sent'::character varying, 'confirmed'::character varying, 'partially_delivered'::character varying, 'delivered'::character varying, 'cancelled'::character varying]::text[])),
  total_amount numeric,
  notes text,
  employee_id uuid,
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchase_orders_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_orders_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT purchase_orders_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT purchase_orders_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT purchase_orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.sensor_temperature_readings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  sensor_id uuid,
  reading_time timestamp with time zone NOT NULL,
  temperature numeric NOT NULL,
  humidity numeric,
  battery_level integer,
  signal_strength integer,
  is_alert boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT sensor_temperature_readings_pkey PRIMARY KEY (id),
  CONSTRAINT sensor_temperature_readings_sensor_id_fkey FOREIGN KEY (sensor_id) REFERENCES public.temperature_sensors(id),
  CONSTRAINT sensor_readings_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT sensor_readings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  address text,
  phone text,
  email text,
  contact_person text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  is_active boolean DEFAULT true,
  CONSTRAINT suppliers_pkey PRIMARY KEY (id),
  CONSTRAINT suppliers_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT suppliers_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT suppliers_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.temperature_alerts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  sensor_id uuid,
  temperature_reading_id uuid,
  alert_type text NOT NULL,
  alert_time timestamp with time zone NOT NULL,
  threshold_value numeric,
  actual_value numeric,
  is_resolved boolean DEFAULT false,
  resolved_by_user_id uuid,
  resolved_at timestamp with time zone,
  resolution_comment text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT temperature_alerts_pkey PRIMARY KEY (id),
  CONSTRAINT temperature_alerts_sensor_id_fkey FOREIGN KEY (sensor_id) REFERENCES public.temperature_sensors(id),
  CONSTRAINT temperature_alerts_temperature_reading_id_fkey FOREIGN KEY (temperature_reading_id) REFERENCES public.sensor_temperature_readings(id),
  CONSTRAINT temperature_alerts_resolved_by_user_id_fkey FOREIGN KEY (resolved_by_user_id) REFERENCES public.users(id),
  CONSTRAINT temperature_alerts_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT temperature_alerts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.temperature_sensors (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  name text NOT NULL,
  location text NOT NULL,
  sensor_type text NOT NULL,
  min_temperature numeric NOT NULL,
  max_temperature numeric NOT NULL,
  alert_min_temperature numeric,
  alert_max_temperature numeric,
  last_calibration_date date,
  next_calibration_date date,
  is_active boolean DEFAULT true,
  mac_address text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT temperature_sensors_pkey PRIMARY KEY (id),
  CONSTRAINT temperature_sensors_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT temperature_sensors_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT temperature_sensors_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.truck_temperature_controls (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_id uuid,
  storage_type text NOT NULL,
  truck_temperature numeric NOT NULL,
  control_date timestamp with time zone NOT NULL,
  is_compliant boolean NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  employee_id uuid,
  user_id uuid,
  CONSTRAINT truck_temperature_controls_pkey PRIMARY KEY (id),
  CONSTRAINT truck_temperature_controls_delivery_id_fkey FOREIGN KEY (delivery_id) REFERENCES public.deliveries(id),
  CONSTRAINT truck_temp_controls_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id),
  CONSTRAINT truck_temp_controls_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  first_name text,
  last_name text,
  organization_id uuid,
  role text NOT NULL DEFAULT 'employee'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  last_login_at timestamp with time zone,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT users_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);